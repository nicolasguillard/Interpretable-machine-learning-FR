## 11.2 - The Future of Interpretability

Let us take a look at the possible future of machine learning interpretability.


**The focus will be on model-agnostic interpretability tools.**

It is much easier to automate interpretability when it is decoupled from the underlying machine learning model. 
The advantage of model-agnostic interpretability lies in its modularity.
We can easily replace the underlying machine learning model. 
We can just as easily replace the interpretation method.
For these reasons, model-agnostic methods will scale much better. 
That is why I believe that model-agnostic methods will become more dominant in the long term.
But intrinsically interpretable methods will also have a place.


**Machine learning will be automated and, with it, interpretability.**

An already visible trend is the automation of model training. 
That includes automated engineering and selection of features, automated hyperparameter optimization, comparison of different models, and ensembling or stacking of the models. 
The result is the best possible prediction model. 
When we use model-agnostic interpretation methods, we can automatically apply them to any model that emerges from the automated machine learning process.
In a way, we can automate this second step as well: 
Automatically compute the feature importance, plot the partial dependence, train a surrogate model, and so on. 
Nobody stops you from automatically computing all these model interpretations.
The actual interpretation still requires people.
Imagine: You upload a dataset, specify the prediction goal and at the push of a button the best prediction model is trained and the program spits out all interpretations of the model. 
There are already first products and I argue that for many applications it will be sufficient to use these automated machine learning services. 
Today anyone can build websites without knowing HTML, CSS and Javascript, but there are still many web developers around.
Similarly, I believe that everyone will be able to train machine learning models without knowing how to program, and there will still be a need for machine learning experts.


**We do not analyze data, we analyze models.**

The raw data itself is always useless.
(I exaggerate on purpose.
The reality is that you need a deep understanding of the data to conduct a meaningful analysis.) 
I don't care about the data; 
I care about the knowledge contained in the data. 
Interpretable machine learning is a great way to distill knowledge from data.
You can probe the model extensively, the model automatically recognizes if and how features are relevant for the prediction (many models have built-in feature selection), the model can automatically detect how relationships are represented, and -- if trained correctly -- the final model is a very good approximation of reality.


Many analytical tools are already based on data models (because they are based on distribution assumptions): 

- Simple hypothesis tests like Student's t-test.
- Hypothesis tests with adjustments for confounders (usually GLMs)
- Analysis of Variance (ANOVA)
- The correlation coefficient (the standardized linear regression coefficient is related to Pearson's correlation coefficient)
- ...

What I am telling you here is actually nothing new. 
So why switch from analyzing assumption-based, transparent models to analyzing assumption-free black box models?
Because making all these assumptions is problematic:
They are usually wrong (unless you believe that most of the world follows a Gaussian distribution), difficult to check, very inflexible and hard to automate.
In many domains, assumption-based models typically have a worse predictive performance on untouched test data than black box machine learning models.
This is only true for big datasets, since interpretable models with good assumptions often perform better with small datasets than black box models.
The black box machine learning approach requires a lot of data to work well.
With the digitization of everything, we will have ever bigger datasets and therefore the approach of machine learning becomes more attractive.
We do not make assumptions, we approximate reality as close as possible (while avoiding overfitting of the training data).
I argue that we should develop all the tools that we have in statistics to answer questions (hypothesis tests, correlation measures, interaction measures, visualization tools, confidence intervals, p-values, prediction intervals, probability distributions) and rewrite them for black box models.
In a way, this is already happening: 

- Let us take a classical linear model: The standardized regression coefficient is already a feature importance measure. 
With the [permutation feature importance measure](#feature-importance), we have a tool that works with any model. 
- In a linear model, the coefficients measures the effect of a single feature on the predicted outcome. 
The generalized version of this is the [partial dependence plot](#pdp).
- Test whether A or B is better: 
For this we can also use partial dependence functions. 
What we do not have yet (to the best of my best knowledge) are statistical tests for arbitrary black box models.


**The data scientists will automate themselves.**

I believe that data scientists will eventually automate themselves out of the job for many analysis and prediction tasks.
For this to happen, the tasks must be well-defined and there must to be some processes and routines around them. 
Today, these routines and processes are missing, but data scientists and colleagues are working on them.
As machine learning becomes an integral part of many industries and institutions, many of the tasks will be automated.
 

**Robots and programs will explain themselves.**

We need more intuitive interfaces to machines and programs that make heavy use of machine learning. 
Some examples:
A self-driving car that reports why it stopped abruptly ("70% probability that a kid will cross the road");
A credit default program that explains to a bank employee why a credit application was rejected ("Applicant has too many credit cards and is employed in an unstable job.");
A robot arm that explains why it moved the item from the conveyor belt into the trash bin ("The item has a craze at the bottom.").


**Interpretability could boost machine intelligence research.**

I can imagine that by doing more research on how programs and machines can explain themselves, we can improve our understanding of intelligence and become better at creating intelligent machines.

In the end, all these predictions are speculations and we have to see what the future really brings. 
Form your own opinion and continue learning!
